#!/usr/bin/env python3

# Generate usys.S, the stubs for syscalls.
# Makefileから呼び出される。リダイレクトでusys.Sを生成する。

# システムコールのリスト
syscalls = [
    "fork",
    "exit",
    "wait",
    "pipe",
    "read",
    "write",
    "close",
    "kill",
    "exec",
    "open",
    "mknod",
    "unlink",
    "fstat",
    "link",
    "mkdir",
    "chdir",
    "dup",
    "getpid",
    "sbrk",
    "sleep",
    "uptime",
]

# ヘッダーを出力
print("# generated by usys.py - do not edit")
print('#include "kernel/syscall.h"')

# 各システムコールに対してスタブを生成
for syscall in syscalls:
    print(f".global {syscall}")
    print(f"{syscall}:")
    # a7レジスタをシステムコール番号を格納するレジスタとして使うこととする
    # (システムコール番号を渡すレジスタとして作業レジスタ(t0-t6)を使うことにより、a0-a7全てをシステムコール引数として利用する実装も可能)
    # (その場合、カーネル側でアセンブリコード記述しなければならない部分が増える)
    # 参考文献:https://valinux.hatenablog.com/entry/20240530#f-c154d82d
    print(f" li a7, SYS_{syscall}")
    print(" ecall")
    print(" ret")
